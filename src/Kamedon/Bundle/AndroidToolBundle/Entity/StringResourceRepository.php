<?php

namespace Kamedon\Bundle\AndroidToolBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Kamedon\Bundle\AndroidToolBundle\Utility\Android\StringsResourceData;

/**
 * StringResourceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StringResourceRepository extends EntityRepository
{
    public function isRegisteredLang(StringResource $stringResource)
    {
        /**
         * @var array
         */
        $res = $this->findBy(
            ['parent' => $stringResource->getParent()->getId(), 'lang' => $stringResource->getLang()]);
        return count($res) > 0;
    }

    public function getParents()
    {
        $res = $this->findBy(['parent' => null]);
        return $res;
    }

    /**
     * @param \Generator $xmlData
     */
    public function register(\Generator $xmlData)
    {
        $repository = $this->getEntityManager();
        $defaultResources = [];
        $tempResources = [];

        /**
         * まずDefalutから登録
         * @var StringsResourceData $data */
        foreach ($xmlData as $data) {
            $resource = new StringResource();
            $resource->setLang($data->lang);
            $resource->setValue($data->value);
            if ($data->lang === StringsResourceData::DEFAULT_LANG) {
                $defaultResources[$data->name] = $resource;
            }else{
                if(isset($defaultResources[$data->name])){
                    $resource->setParent($defaultResources[$data->name]);
                }else{
                    $tempResources[] = $resource;
                }
            }
            $repository->persist($resource);
        }

        /**
         * @var StringResource $resource
         */
        foreach($tempResources as $resource){
            if(isset($defaultResources[$data->name])){
                $resource->setParent($defaultResources[$data->name]);
            }
        }
        $repository->flush();

    }
}

